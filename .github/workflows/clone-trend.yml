name: Track clone stats
on:
  schedule: [{ cron: "7 3 * * *" }]   # daily at 03:07 UTC
  workflow_dispatch:
permissions:
  contents: write
  actions: read
  id-token: write
jobs:
  track:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Fetch last 14 days of clone data
        env:
          REPO: ${{ github.repository }}     # owner/repo
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -s -H "Authorization: Bearer $GH_TOKEN" \
               -H "Accept: application/vnd.github+json" \
               "https://api.github.com/repos/$REPO/traffic/clones?per=day" > clones.json
          cat clones.json | jq '.'

      - name: Ensure data directory and CSV
        run: |
          mkdir -p analytics
          if [ ! -f analytics/clone_history.csv ]; then
            echo "date,clones,unique_cloners" > analytics/clone_history.csv
          fi

      - name: Merge new data into CSV (de-duplicate by date)
        run: |
          # Build a temp map of existing dates to avoid duplicates
          awk -F, 'NR>1 {print $1}' analytics/clone_history.csv | sort > existing_dates.txt

          # Append any missing dates from API response
          jq -r '.clones[] | "\(.timestamp[0:10]),\(.count),\(.uniques)"' clones.json \
            | while IFS= read -r line; do
                d=$(echo "$line" | cut -d',' -f1)
                if ! grep -qx "$d" existing_dates.txt; then
                  echo "$line" >> analytics/clone_history.csv
                fi
              done

          # Sort CSV by date (header stays on top)
          { head -n1 analytics/clone_history.csv && tail -n +2 analytics/clone_history.csv | sort; } > analytics/clone_history.sorted.csv
          mv analytics/clone_history.sorted.csv analytics/clone_history.csv

      - name: Commit changes
        run: |
          if git diff --quiet; then
            echo "No changes."
          else
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add analytics/clone_history.csv
            git commit -m "Update clone history"
            git push
          fi
